volumes:
  curtdbv:

services: # DO NOT CHANGE
  curtail:
    environment:
      CURTAIL_PATH: '/home/curtail/private'
      DATABASE_URL: 'postgres://postgres:3HGJI6hJclYleHhkra+qUg@curtdb/curtail'
      VCAP_SERVICES: '{}'
#    image: registry.kube.curtailsecurity.com/curtail/regrade/curtail-sensor:master
    image: curtail.azurecr.io/curtail-sensor:latest
    volumes:
      - ./private:/home/curtail/private
    cap_add:
      - IPC_LOCK
      - SYS_PTRACE
    networks:
      securenet:
        aliases:
          - securenet_curtail
      pubnet:
        aliases:
          - pubnet_curtail
    links:
      - nginx
      - envoy
      - curtdb:curtdb
    ports:
      - "10081:80"
      - "4317:4317"
    restart: always

  curtui: # DO NOT CHANGE
    image: curtail.azurecr.io/curtail-ui:latest
    user: 0:0
    environment:
      CURTAIL_HTTPS_PORT: 4430
      DATABASE_URL: 'postgres://postgres:3HGJI6hJclYleHhkra+qUg@curtdb/curtail'
      DOCKER_NETWORK: cloudflare_securenet
    volumes:
      - ./private:/home/curtail/private
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      securenet:
        aliases:
          - curtui
    ports:
      - "14430:4430"
      - "18080:8080"
    restart: always

  curtdb: # DO NOT CHANGE
    image: postgres:13.2
    environment:
      POSTGRES_PASSWORD: 3HGJI6hJclYleHhkra+qUg
      POSTGRES_DB: curtail
    ports:
      - "5434:5432"
    volumes:
      - curtdbv:/var/lib/postgresql/data
    networks:
      securenet:
        aliases:
          - curtdb
    restart: always

  # ///////////////////////////////////////////  
  # CONTAINER SPECIFICS
  # ///////////////////////////////////////////  

  # Biggest questions:
      # - What is the purpose of nginx and envoy? Why have two?
      # - Does curtail see nginx and envoy and consider those two containers the ones to watch 
      #   network traffic on?
      # - My server runs on port 80. Where should the client connect to?
      # - How are environmental variables used here?

  nginx:
    build:
      context: .
      dockerfile: Dockerfile
    image: demo-chunky
    ports:
      - 8008:80 # Am I routing traffic to port 8008, or to port 10081?
    environment:
      TESTAPP_PORT: "80" # What does this do?
    networks:
      securenet:

  envoy:
    build:
      context: .
      dockerfile: Dockerfile
    image: demo-chunky # Why is this named the same as the top one, will it matter?
    ports:
      - 8009:80
    environment:
      TESTAPP_PORT: "80"
      BUGGY: 1 # Obviously an environmental variable for the app.js app
        # Is this so that both bugged and not bugged apps can run the same file (app.js),
        # and the flow control is in the file?
        # As opposed to having two containers, where one uses app.js and the other use for example app_copy.js?
    networks:
      securenet:

networks:
  securenet:
  pubnet:
